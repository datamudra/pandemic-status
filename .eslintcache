[{"/home/stan/Desktop/python_work/code/mdash/src/reportWebVitals.js":"1","/home/stan/Desktop/python_work/code/mdash/src/index.js":"2","/home/stan/Desktop/python_work/code/mdash/src/components/constants.js":"3","/home/stan/Desktop/python_work/code/mdash/src/components/DashCard.js":"4","/home/stan/Desktop/python_work/code/mdash/src/components/linechart.js":"5","/home/stan/Desktop/python_work/code/mdash/src/components/trend21.js":"6","/home/stan/Desktop/python_work/code/mdash/src/components/alltime.js":"7","/home/stan/Desktop/python_work/code/mdash/src/components/demographics.js":"8","/home/stan/Desktop/python_work/code/mdash/src/components/AccordPanels.js":"9","/home/stan/Desktop/python_work/code/mdash/src/components/CurrentWeekCards.js":"10","/home/stan/Desktop/python_work/code/mdash/src/components/TabPanels.js":"11","/home/stan/Desktop/python_work/code/mdash/src/App.js":"12","/home/stan/Desktop/python_work/code/mdash/src/components/Home.js":"13","/home/stan/Desktop/python_work/code/mdash/src/hooks/useStickySWR.js":"14"},{"size":362,"mtime":1609842718414,"results":"15","hashOfConfig":"16"},{"size":528,"mtime":1610686712198,"results":"17","hashOfConfig":"16"},{"size":165626,"mtime":1611816484036,"results":"18","hashOfConfig":"16"},{"size":3251,"mtime":1611651290077,"results":"19","hashOfConfig":"16"},{"size":1885,"mtime":1610969840635,"results":"20","hashOfConfig":"16"},{"size":2070,"mtime":1610864216965,"results":"21","hashOfConfig":"16"},{"size":1380,"mtime":1611649562209,"results":"22","hashOfConfig":"16"},{"size":2691,"mtime":1611650525158,"results":"23","hashOfConfig":"16"},{"size":4120,"mtime":1610809308479,"results":"24","hashOfConfig":"16"},{"size":1127,"mtime":1611817520753,"results":"25","hashOfConfig":"16"},{"size":3452,"mtime":1611648453774,"results":"26","hashOfConfig":"16"},{"size":5288,"mtime":1611903869350,"results":"27","hashOfConfig":"16"},{"size":8333,"mtime":1611926214665,"results":"28","hashOfConfig":"16"},{"size":617,"mtime":1608314406000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tbv1p6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/home/stan/Desktop/python_work/code/mdash/src/reportWebVitals.js",[],["65","66"],"/home/stan/Desktop/python_work/code/mdash/src/index.js",[],["67","68"],"/home/stan/Desktop/python_work/code/mdash/src/components/constants.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/DashCard.js",["69"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Grid, Paper } from '@material-ui/core'; \n\nconst numberFormatter = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 1, minimumFractionDigits: 0,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n      padding: 0,\n      '&:last-child': {\n        paddingBottom: 0,\n      },\n    },\n  lrow: {\n    textAlign: 'center',\n    backgroundColor: '#fbe5e7',\n    color: '#ff6384',\n    fontSize: 18\n  },\n  mrow: {\n    textAlign: 'center',\n  },\n  rrow: {\n    textAlign: 'center',\n    backgroundColor: '#f4f6ff',\n    color: '#36a2eb',\n    fontSize: 18,\n  },\n\n  title: {\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  rdc: { color: '#36a2eb', fontSize: 11, fontWeight: 'bold' },\n  ldc: { color: '#ff6384', fontSize: 11, fontWeight: 'bold' },\n  arrow: {\n    fontSize: 10,\n  },\n  \n  \n}));\n\nconst DV = (props) => {\n  const { d, dc } = props;\n  const classes = useStyles();\n\n  return (\n    <Box component=\"span\" className={classes[dc]} >\n      <Box component=\"span\" className={classes.arrow} >\n      {d > 0\n        ? '\\u25B2' + Math.abs(d)+'%'\n        : d < 0\n          ? '\\u25BC' + Math.abs(d)+'%'\n          : ''}\n      </Box>\n    </Box>\n  );\n};\n\nconst DashCard = props => {\n  const { t, ll, rl, rs, ls, rd, ld, isd, isp=false, isb=false} = props;\n\tconst classes = useStyles();\n  \n  return (\n  <div>\n    <Card /* raised={true} */  >\n        <CardContent className={classes.root}>\n           <Grid container direction='row'  >\n           <Grid item xs={12} >\n              <Paper className={classes.mrow} variant='outlined' square={true}>\n                <Typography>\n                  {t}\n                </Typography>\n              </Paper>\n            </ Grid>\n            <Grid item xs={6} >\n              <Paper className={classes.lrow} variant='outlined' square={true}>\n                <Typography >\n                  {ll} \n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.lrow} variant='outlined' square={true}>\n                <Typography>\n                  {numberFormatter.format(ls)} {isp ? '%' : ''}  {isd \n                          ? <DV className={classes.ld} d={ld} dc='ldc' />\n                          : ''}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={6} >\n              <Paper className={classes.rrow} variant='outlined' square={true}>\n                <Typography >\n                  {rl} \n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.rrow} variant='outlined' square={true}>\n                <Typography>\n                  {numberFormatter.format(rs)} {isp ? '%' : ''} {isd\n                    ? <DV className={classes.rd} d={rd} dc='rdc' />\n                    : ''}\n                </Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n      </CardContent>\n    </Card>\n  </div>\n  );\n};\n\nexport default DashCard;\n","/home/stan/Desktop/python_work/code/mdash/src/components/linechart.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/trend21.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/alltime.js",["70"],"import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport DashCard from './DashCard';\n\n\nconst AllTime = (props) => {\n\n    const { l, r, m } = props;\n    \n    return (\n        <Grid container direction='row' spacing={1} >\n            <Grid item xs={12} sm={6} >\n               <DashCard t='Positive Cases' \n                        ll={l.loc} \n                        rl={r.loc} \n                        rs={r.amn}\n                        ls={l.amn}\n                        isd={false}/> \n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Deaths'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.amd}\n                    ls={l.amd}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Tests'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.amt}\n                    ls={l.amt}\n                    isd={false}  />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Deathrate'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.adr}\n                    ls={l.adr}\n                    isd={false} \n                    isp={true}/>\n            </Grid>\n        </Grid> \n\n    );\n};\n\nexport default AllTime;\n","/home/stan/Desktop/python_work/code/mdash/src/components/demographics.js",["71","72","73","74"],"import { Grid, Paper, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DashCard from './DashCard';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n           display: 'flex',\n           justifyContent:'space-between'\n    },\n    paper: {\n        // padding: theme.spacing(0),\n        textAlign: 'center',\n    },\n    // details: { backgroundColor: '#6c757d10' }\n}));\n\nconst Demographics = (props) => {\n\n    const { l, r, m } = props;\n    const classes = useStyles();\n\n    return (\n        <Grid container direction='row' spacing={1} >\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Population Aged Over 65 years'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.p65}\n                    ls={l.p65}\n                    isd={false}\n                    isp={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Population Aged Over 70 years'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.p70}\n                    ls={l.p70}\n                    isd={false}\n                    isp={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Hospital Beds Per Thousand People'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.hos}\n                    ls={l.hos}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Life Expectancy'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.exp}\n                    ls={l.exp}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Total Population'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.pop}\n                    ls={l.pop}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Population Density'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.ppd}\n                    ls={l.ppd}\n                    isd={false}\n                    isb={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Median Age'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.med}\n                    ls={l.med}\n                    isd={false} />\n            </Grid>\n           \n        </Grid> \n            );\n};\n\nexport default Demographics;\n",["75","76"],"/home/stan/Desktop/python_work/code/mdash/src/components/AccordPanels.js",[],["77","78"],"/home/stan/Desktop/python_work/code/mdash/src/components/CurrentWeekCards.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/TabPanels.js",[],"/home/stan/Desktop/python_work/code/mdash/src/App.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/Home.js",[],"/home/stan/Desktop/python_work/code/mdash/src/hooks/useStickySWR.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":66,"column":54,"nodeType":"87","messageId":"88","endLine":66,"endColumn":57},{"ruleId":"85","severity":1,"message":"89","line":8,"column":19,"nodeType":"87","messageId":"88","endLine":8,"endColumn":20},{"ruleId":"85","severity":1,"message":"90","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":21},{"ruleId":"85","severity":1,"message":"91","line":1,"column":23,"nodeType":"87","messageId":"88","endLine":1,"endColumn":33},{"ruleId":"85","severity":1,"message":"89","line":21,"column":19,"nodeType":"87","messageId":"88","endLine":21,"endColumn":20},{"ruleId":"85","severity":1,"message":"92","line":22,"column":11,"nodeType":"87","messageId":"88","endLine":22,"endColumn":18},{"ruleId":"79","replacedBy":"93"},{"ruleId":"81","replacedBy":"94"},{"ruleId":"79","replacedBy":"95"},{"ruleId":"81","replacedBy":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'isb' is assigned a value but never used.","Identifier","unusedVar","'m' is assigned a value but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.",["97"],["98"],["97"],["98"],"no-global-assign","no-unsafe-negation"]