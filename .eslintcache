[{"/home/stan/Desktop/python_work/code/mdash/src/reportWebVitals.js":"1","/home/stan/Desktop/python_work/code/mdash/src/index.js":"2","/home/stan/Desktop/python_work/code/mdash/src/components/DashCard.js":"3","/home/stan/Desktop/python_work/code/mdash/src/components/TabPanels.js":"4","/home/stan/Desktop/python_work/code/mdash/src/App.js":"5","/home/stan/Desktop/python_work/code/mdash/src/components/Home.js":"6","/home/stan/Desktop/python_work/code/mdash/src/hooks/useStickySWR.js":"7","/home/stan/Desktop/python_work/code/mdash/src/components/QAPanels.js":"8","/home/stan/Desktop/python_work/code/mdash/src/components/ThisWeek.js":"9","/home/stan/Desktop/python_work/code/mdash/src/components/Trend21.js":"10","/home/stan/Desktop/python_work/code/mdash/src/components/LineChart.js":"11","/home/stan/Desktop/python_work/code/mdash/src/components/People.js":"12","/home/stan/Desktop/python_work/code/mdash/src/components/AllTime.js":"13","/home/stan/Desktop/python_work/code/mdash/src/components/DSpanels.js":"14"},{"size":362,"mtime":1609842718414,"results":"15","hashOfConfig":"16"},{"size":528,"mtime":1610686712198,"results":"17","hashOfConfig":"16"},{"size":3526,"mtime":1612430861493,"results":"18","hashOfConfig":"16"},{"size":3052,"mtime":1612436921579,"results":"19","hashOfConfig":"16"},{"size":6753,"mtime":1612433553512,"results":"20","hashOfConfig":"16"},{"size":7771,"mtime":1612438613053,"results":"21","hashOfConfig":"16"},{"size":617,"mtime":1608314406000,"results":"22","hashOfConfig":"16"},{"size":11592,"mtime":1612434841559,"results":"23","hashOfConfig":"16"},{"size":2372,"mtime":1612437609626,"results":"24","hashOfConfig":"16"},{"size":1783,"mtime":1612425848735,"results":"25","hashOfConfig":"16"},{"size":1838,"mtime":1612156992623,"results":"26","hashOfConfig":"16"},{"size":2475,"mtime":1612436632072,"results":"27","hashOfConfig":"16"},{"size":1919,"mtime":1612234858943,"results":"28","hashOfConfig":"16"},{"size":6210,"mtime":1612433842386,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tbv1p6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/stan/Desktop/python_work/code/mdash/src/reportWebVitals.js",[],["62","63"],"/home/stan/Desktop/python_work/code/mdash/src/index.js",[],["64","65"],"/home/stan/Desktop/python_work/code/mdash/src/components/DashCard.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/TabPanels.js",[],"/home/stan/Desktop/python_work/code/mdash/src/App.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/Home.js",[],"/home/stan/Desktop/python_work/code/mdash/src/hooks/useStickySWR.js",[],["66","67"],"/home/stan/Desktop/python_work/code/mdash/src/components/QAPanels.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/ThisWeek.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/Trend21.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/LineChart.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/People.js",[],"/home/stan/Desktop/python_work/code/mdash/src/components/AllTime.js",["68","69","70","71"],"import { Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport DashCard from './DashCard';\n\n\nconst AllTime = (props) => {\n\n    const { l, r } = props;\n    \n    return (\n        <Grid container direction='row' spacing={1} >\n            <Grid item xs={12}>\n                <Typography align='center'>\n                    Numbers are totals per million population\n                </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} >\n               <DashCard t='Confirmed Cases' \n                        ll={l.loc} \n                        rl={r.loc} \n                        rs={r.amn}\n                        ls={l.amn}\n                        isd={false}/> \n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Deaths'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.amd}\n                    ls={l.amd}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Tests'\n                    ll={l.tlv}\n                    rl={r.tlv}\n                    rs={r.amt == 0 ? -1 : r.amt}\n                    ls={l.amt == 0 ? -1 : l.amt}\n                    isd={false}  />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Vaccinations'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.amv == 0 ? -1 : r.amv}\n                    ls={l.amv == 0 ? -1 : l.amv}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Deathrate'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.adr}\n                    ls={l.adr}\n                    isd={false} \n                    isp={true}/>\n            </Grid>\n        \n        </Grid> \n\n    );\n};\n\nexport default AllTime;\n","/home/stan/Desktop/python_work/code/mdash/src/components/DSpanels.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"72","replacedBy":"78"},{"ruleId":"74","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":37,"column":31,"nodeType":"82","messageId":"83","endLine":37,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":38,"column":31,"nodeType":"82","messageId":"83","endLine":38,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":45,"column":31,"nodeType":"82","messageId":"83","endLine":45,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":46,"column":31,"nodeType":"82","messageId":"83","endLine":46,"endColumn":33},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],["84"],["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]