{"version":3,"sources":["components/LineChart.js","components/Trend21.js","components/DashCard.js","components/AllTime.js","components/ThisWeek.js","components/People.js","components/TabPanels.js","hooks/useStickySWR.js","components/Home.js","components/QAPanels.js","components/DSpanels.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["options","legend","position","display","title","scales","yAxes","type","id","ticks","beginAtZero","autoSkip","maxTicksLimit","gridLines","drawOnArea","xAxes","LineChart","props","labs","datal","datar","data","labels","datasets","label","locl","fill","backgroundColor","borderColor","yAxisID","locr","useStyles","makeStyles","paper","textAlign","tChip","details","Trend21","l","r","m","classes","Grid","container","direction","spacing","item","xs","Typography","component","align","Chip","className","sm","Paper","elevation","dts","tmn","loc","tit","tmd","tmv","l1","numberFormatter","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","theme","root","padding","paddingBottom","lrow","color","fontSize","mrow","rrow","rdc","fontWeight","ldc","arrow","DV","d","dc","Box","Math","abs","DashCard","t","ll","rl","rs","ls","rd","ld","isd","isp","Card","CardContent","variant","square","format","AllTime","amn","amd","tlv","amt","amv","adr","ThisWeek","wr","wmn","wdn","wmd","wdd","wmt","wdt","wmv","wdv","icon","ut","People","p65","p70","hos","exp","pop","ppd","isb","med","TabPanel","children","value","index","other","role","hidden","aria-labelledby","p","a11yProps","tabsu","borderBottom","tabs","TabPanels","left","right","meta","useTheme","React","useState","setValue","AppBar","Tabs","onChange","event","newValue","ReactGA","pageview","indicatorColor","textColor","aria-label","Tab","dir","useStickySWR","key","fetcher","swrOptions","setOptions","args","useSWR","isValidating","error","rest","useUpdateEffect","produce","draftOptions","initialData","API_ROOT_URL","chipRow","drawRow","closeRow","chipR","chipL","chipD","lItemEven","Home","L_KEY","R_KEY","setL_KEY","setR_KEY","locPlace","newLoc","setnewLoc","dOpen","setdOpen","lFilter","setlFilter","isLeft","setisLeft","fullList","setfullList","url","fetch","then","response","json","R_DATA","revalidateOnMount","refreshInterval","L_DATA","M_DATA","LOCS","chipDlg","isleft","toggleDrawer","console","log","cList","filter","toLowerCase","includes","isOpen","length","Object","keys","Row","style","ListItem","alignItems","button","divider","onClick","justify","Loclist","height","itemCount","itemSize","width","locDrawer","Drawer","anchor","open","onClose","TextField","target","size","InputProps","endAdornment","InputAdornment","Button","locKey","startIcon","Divider","avatar","Avatar","src","iso","process","clickable","onDelete","deleteIcon","CircularProgress","hl1","typography","pxToRem","flexBasis","flexShrink","hl2","palette","text","secondary","flexGrow","justifyContent","QAPanels","expd","setExpd","hChng","isExpanded","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","href","rel","cardR","DSPanels","raised","aPage","About","alt","sidx","idx","barTit","drawer","breakpoints","up","drawerWidth","barChip","appBar","marginLeft","tBar","menuButton","marginRight","content","toolbar","mixins","drawerPaper","pages","App","window","mO","setMO","L_LOC","setL_LOC","R_LOC","setR_LOC","hMT","setsidx","hLIC","List","selected","ListItemIcon","ListItemText","primary","undefined","document","body","useEffect","initialize","CssBaseline","Toolbar","md","IconButton","edge","Hidden","mdUp","implementation","ModalProps","keepMounted","smDown","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.524a50e5.chunk.js","sourcesContent":["import React from 'react';\nimport { Line } from '@reactchartjs/react-chart.js';\n\nconst options = {\n    legend: { position: 'right', display : false},\n    title: {\n        display: false,\n      },\n    scales: {\n        yAxes:[\n                {\n                    type: 'linear', display: true, position: 'left', id: 'yx1',\n                    ticks:{ beginAtZero: true, autoSkip: true, maxTicksLimit: 4},\n                },\n                {   type: 'linear', display: false, position: 'right', id: 'yx2', gridLines: {drawOnArea: false} ,\n                    ticks: { beginAtZero: true, autoSkip: true, maxTicksLimit: 4 }\n                }\n                ],      \n      xAxes: [\n                { type: 'time', ticks: { autoSkip: true, maxTicksLimit: 4}\n                }\n             ]\n    },\n  };\n   \n  const LineChart = props => {\n      const {labs, datal, datar, locl, locr} = props;\n      const data  = {\n                    labels: labs,\n                    datasets: \n                    [\n                        {\n                        label: locl,\n                        data: datal,\n                        fill: false,\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\n                        yAxisID: 'yx1',\n                        },\n                        {\n                        label: locr,\n                        data: datar,\n                        fill: false,\n                        backgroundColor: 'rgb(54, 162, 235)',\n                        borderColor: 'rgba(54, 162, 235, 0.2)',\n                        yAxisID: 'yx1',\n                        },\n                    ],\n                    }; \n      return (\n          \n               <Line data={data} options={options} />\n          \n      );\n  }; \n\nexport default LineChart;","import { Chip, Grid, Paper, Typography } from '@material-ui/core';\nimport React from 'react';\nimport LineChart from \"./LineChart\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(() => ({\n   paper: {\n        textAlign: 'center',\n    },\n\ttChip: { backgroundColor: 'transparent', },\n\tdetails: { backgroundColor: '#6c757d10', }\n}));\n\nconst Trend21 = (props) => {\n      \n    const  {l, r ,m} = props;\n    const classes = useStyles();\n\n    return (\n\t\t<Grid container direction='row' spacing={1}>\n\t\t\t<Grid item xs={12} spacing={1}>\n\t\t\t\t<Typography component='div' align='center'>\n\t\t\t\t\t<Chip\n\t\t\t\t\t\tclassName={classes.tChip}\n\t\t\t\t\t\tlabel='Numbers are totals per million population'\n\t\t\t\t\t/>\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t<Grid item xs={12} sm={6} >\n\t\t\t\t\t\t<Paper className={classes.paper} elevation={3} >\n\t\t\t\t\t\t\t<Typography component=\"p\" align='center'>\n\t\t\t\t\t\t\t\tConfirmed Cases\n\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\t\tlabs={m.dts}\n\t\t\t\t\t\t\t\tdatal= {l.tmn}\n\t\t\t\t\t\t\t\tdatar={r.tmn}\n\t\t\t\t\t\t\t\tlocl= {l.loc}\n\t\t\t\t\t\t\t\tlocr={r.loc}\n\t\t\t\t\t\t\t\ttit={'Covid 19 New Cases'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Grid>\n\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Paper className={classes.paper} elevation={3} >\n\t\t\t\t<Typography  component=\"p\" align='center'>    \n\t\t\t\tDeaths\n\t\t\t\t</Typography>\n\t\t\t\t<LineChart \n\t\t\t\t\t\t\tlabs={m.dts} \n\t\t\t\t\t\t\tdatal= {l.tmd}\n\t\t\t\t\t\t\tdatar= {r.tmd}\n\t\t\t\t\t\t\tlocl =  {l.loc}\n\t\t\t\t\t\t\tlocr = {r.loc} \n\t\t\t\t\t\t\ttit={'Covid 19 Deaths'} \n\t\t\t\t\t\t/>\n\t\t\t\t</Paper>\n          \t</Grid> \n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t<Typography  component=\"p\" align='center'>    \n\t\t\t\tVaccinations (Country Level)\n\t\t\t\t</Typography>\t\t\t\t\n\t\t\t\t<LineChart \n\t\t\t\t\t\t\tlabs={m.dts} \n\t\t\t\t\t\t\tdatal= {l.tmv}\n\t\t\t\t\t\t\tdatar= {r.tmv}\n\t\t\t\t\t\t\tlocl =  {l.l1}\n\t\t\t\t\t\t\tlocr = {r.l1} \n\t\t\t\t\t\t\ttit={'Covid 19 Tests'} \n\t\t\t\t\t\t/>\n\t\t\t\t</Paper>\n\t\t\t</Grid> \n\t\t</Grid>\n   );\n};\n\nexport default Trend21;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Grid, Paper } from '@material-ui/core'; \n\nconst numberFormatter = new Intl.NumberFormat('en-US', {\n  maximumFractionDigits: 1, minimumFractionDigits: 0,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n      padding: 0,\n      '&:last-child': {\n        paddingBottom: 0,\n      },\n    },\n  lrow: {\n    textAlign: 'center',\n    backgroundColor: '#fbe5e7',\n    color: '#ff6384',\n    fontSize: 18\n  },\n  mrow: {\n    textAlign: 'center',\n  },\n  rrow: {\n    textAlign: 'center',\n    backgroundColor: '#f4f6ff',\n    color: '#36a2eb',\n    fontSize: 18,\n  },\n\n  title: {\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  rdc: { color: '#36a2eb', fontSize: 11, fontWeight: 'bold' },\n  ldc: { color: '#ff6384', fontSize: 11, fontWeight: 'bold' },\n  arrow: {\n    fontSize: 10,\n  },\n  \n  \n}));\n\nconst DV = (props) => {\n  const { d, dc } = props;\n  const classes = useStyles();\n\n  return (\n    <Box component=\"span\" className={classes[dc]} >\n      <Box component=\"span\" className={classes.arrow} >\n      {d > 0\n        ? '\\u25B2' + Math.abs(d)+'%'\n        : d < 0\n          ? '\\u25BC' + Math.abs(d)+'%'\n          : ''}\n      </Box>\n    </Box>\n  );\n};\n\nconst DashCard = props => {\n  const { t, ll, rl, rs, ls, rd, ld, isd, isp=false} = props;\n\tconst classes = useStyles();\n  return (\n  <div>\n    <Card >\n        <CardContent className={classes.root}>\n          <Grid container direction='row' >        \n              <Grid item xs={12} >\n                <Paper className={classes.mrow} variant='outlined' square={true}>\n                  <Typography>\n                    {t}\n                  </Typography>\n                </Paper>\n              </ Grid>\n            <Grid container className={classes.lrow} >\n              <Grid item xs={6} >\n                  <Paper className={classes.lrow} variant='outlined' square={true}>\n                  <Typography >\n                    {ll} \n                  </Typography>\n                </Paper>\n              </Grid>\n              <Grid item xs={6}  >\n                <Paper className={classes.lrow} variant='outlined' square={true}>\n                  <Typography>\n                    {ls < 0 ? 'No data' : numberFormatter.format(ls)} {isp & ls>0 ? '%' : ''}  {isd & ls>0 \n                            ? <DV className={classes.ld} d={ld} dc='ldc' />\n                            : ''}\n                  </Typography>\n                </Paper>\n              </Grid>\n            </ Grid >\n            <Grid container className={classes.rrow} >\n              <Grid item xs={6} >\n                <Paper className={classes.rrow} variant='outlined' square={true}>\n                  <Typography >\n                    {rl} \n                  </Typography>\n                </Paper>\n              </Grid>\n              <Grid item xs={6}>\n                <Paper className={classes.rrow} variant='outlined' square={true}>\n                  <Typography>\n                    {rs < 0 ? 'No data' :numberFormatter.format(rs)} {isp & rs>0 ? '%' : ''} {isd & rs>0\n                      ? <DV className={classes.rd} d={rd} dc='rdc' />\n                      : ''}\n                  </Typography>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n      </CardContent>\n    </Card>\n  </div>\n  );\n};\n\nexport default DashCard;\n","import { Chip, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport DashCard from './DashCard';\n\nconst useStyles = makeStyles(() => ({\n    \n    tChip: { backgroundColor: 'transparent', },\n\n}));\n\nconst AllTime = (props) => {\n\n    const { l, r } = props;\n    const classes = useStyles();\n    return (\n        <Grid container direction='row' spacing={1} >\n            <Grid item xs={12} spacing={1}>\n                <Typography component='div' align='center'>\n                    <Chip\n                        className={classes.tChip}\n                        label='Numbers are totals per million population'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} >\n               <DashCard t='Confirmed Cases' \n                        ll={l.loc} \n                        rl={r.loc} \n                        rs={r.amn}\n                        ls={l.amn}\n                        isd={false}/> \n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Deaths'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.amd}\n                    ls={l.amd}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Tests'\n                    ll={l.tlv}\n                    rl={r.tlv}\n                    rs={r.amt == 0 ? -1 : r.amt}\n                    ls={l.amt == 0 ? -1 : l.amt}\n                    isd={false}  />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Vaccinations'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.amv == 0 ? -1 : r.amv}\n                    ls={l.amv == 0 ? -1 : l.amv}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Deathrate'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.adr}\n                    ls={l.adr}\n                    isd={false} \n                    isp={true}/>\n            </Grid>\n        \n        </Grid> \n\n    );\n};\n\nexport default AllTime;\n","import { Chip, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport DashCard from './DashCard';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\nconst useStyles = makeStyles((theme) => ({\n    tChip: { backgroundColor: 'transparent', },\n\n}));\n\nconst ThisWeek = (props) => {\n\n    const { l, r, m} = props;\n    const classes = useStyles();\n\n    return (\n       <Grid container spacing={0}>\n            <Grid item xs={12} spacing={1}>\n                <Typography component='div' align='center'>\n                    <Chip\n                        label={'7 days period ('+m.wr+')'}\n                        variant='outlined'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} spacing={1}>\n                <Typography component='div' align='center'>\n                    <Chip\n                        className={classes.tChip}\n                        label='Numbers are totals per million population'\n                    />\n                </Typography>\n            </Grid>\n         <Grid container direction='row' spacing={1} >\n             <Grid item xs={12} sm={6} >\n                <DashCard t='Confirmed Cases'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.wmn}\n                    ls={l.wmn}\n                    ld={l.wdn}  rd={r.wdn} isd={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Deaths'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.wmd}\n                    ls={l.wmd}\n                    ld={l.wdd} rd={r.wdd} isd={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Tests'\n                    ll={l.tlv}\n                    rl={r.tlv}\n                    rs={r.wmt===0 ? -1 : r.wmt}\n                    ls={l.wmt === 0 ? -1 : l.wmt}\n                    ld={l.wdt} rd={r.wdt} isd={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Vaccinations'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.wmv === 0 ? -1 : r.wmv}\n                    ls={l.wmv === 0 ? -1 : l.wmv}\n                    ld={l.wdv} rd={r.wdv} isd={true} />\n            </Grid> \n                <Grid item xs={12}>\n                    <Typography component='div' align='center'>\n                        <Chip\n                            icon={<RestoreIcon />}\n                            label={m.ut}\n                            variant='outlined'\n                        />\n                    </Typography>\n                </Grid> \n                \n        </Grid> \n           \n        </Grid>\n\n    );\n};\n\nexport default ThisWeek;\n","import { Chip, Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport DashCard from './DashCard';\n\nconst People = (props) => {\n\n    const { l, r } = props;\n    \n    return (\n        <Grid container direction='row' spacing={1} >\n            <Grid item xs={12} spacing={1}>\n                <Typography component='div' align='center'>\n                    <Chip\n                        label={'Country level demographic data'}\n                        variant='outlined'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Population Aged Over 65 years'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.p65}\n                    ls={l.p65}\n                    isd={false}\n                    isp={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Population Aged Over 70 years'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.p70}\n                    ls={l.p70}\n                    isd={false}\n                    isp={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Hospital Beds Per Thousand People'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.hos}\n                    ls={l.hos}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Life Expectancy'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.exp}\n                    ls={l.exp}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Total Population'\n                    ll={l.loc}\n                    rl={r.loc}\n                    rs={r.pop}\n                    ls={l.pop}\n                    isd={false} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Population Density'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.ppd}\n                    ls={l.ppd}\n                    isd={false}\n                    isb={true} />\n            </Grid>\n            <Grid item xs={12} sm={6} >\n                <DashCard t='Median Age'\n                    ll={l.l1}\n                    rl={r.l1}\n                    rs={r.med}\n                    ls={l.med}\n                    isd={false} />\n            </Grid>\n           \n        </Grid> \n            );\n};\n\nexport default People;\n","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Trend21 from \"./Trend21\";\nimport AllTime from \"./AllTime\";\nimport ThisWeek from \"./ThisWeek\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport People from \"./People\";\nimport ReactGA from 'react-ga';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={1}>\n                    <Typography component='div'> {children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-tabs-${index}`,\n    };\n}\nconst useStyles = makeStyles((theme) => ({\n  tabsu: { borderBottom: '1px solid #9e9e9e',}\n  \n}));\n\nconst tabs=['thisweek', '3weeks','history','people'];\n\nconst TabPanels = (props) => {\n\n    const { left, right, meta } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        ReactGA.pageview(tabs[newValue]);\n    };\n\n   \n    return (\n    <div>\n       <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n                <Tabs className={classes.tabsu}\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full tabs\"\n                >\n                    <Tab label=\"This Week\" {...a11yProps(0)} />\n                    <Tab label=\"3 Week Trends\" {...a11yProps(1)} />\n                    <Tab label=\"Full History\" {...a11yProps(2)} />\n                      <Tab label=\"The People\" {...a11yProps(3)} /> \n                </Tabs>\n            </AppBar>\n  \n                <TabPanel value={value} index={0} dir={theme.direction}>\n                 <ThisWeek l={left} r={right} m={meta}/> \n                </TabPanel>\n                <TabPanel value={value} index={1} dir={theme.direction}>\n                      <Trend21 l={left} r={right} m={meta} /> \n                </TabPanel>\n                <TabPanel value={value} index={2} dir={theme.direction}>\n                  <AllTime l={left} r={right} m={meta} /> \n                </TabPanel>\n                 <TabPanel value={value} index={3} dir={theme.direction}>\n                  <People l={left} r={right} m={meta} /> \n                </TabPanel> \n        </div>\n    );\n}\n\nexport default TabPanels;\n","import produce from 'immer';\nimport {useState} from 'react';\nimport {useUpdateEffect} from 'react-use';\nimport useSWR from 'swr';\n\nexport function useStickySWR(key, fetcher, swrOptions, ...args) {\n  const [options, setOptions] = useState(swrOptions);\n\n  const {data, isValidating, error, ...rest} = useSWR(\n    key,\n    fetcher,\n    options,\n    ...args\n  );\n\n  useUpdateEffect(() => {\n    setOptions(\n      produce(options, (draftOptions) => {\n        draftOptions.initialData = data;\n      })\n    );\n  }, [data]);\n\n  return {\n    ...rest,\n    isValidating,\n    error,\n    data,\n  };\n}\n\nexport default useStickySWR;\n","import React  from \"react\";\nimport { Avatar, Button, Chip, CircularProgress,  Divider,  Drawer,  Grid,  InputAdornment,  ListItem,  TextField,  Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TabPanels from \"./TabPanels\";\nimport useStickySWR from \"../hooks/useStickySWR\";\nimport { FixedSizeList as List } from 'react-window';\nimport ReactGA from 'react-ga';\n\n\n\nconst API_ROOT_URL = 'https://raw.githubusercontent.com/datamudra/api/master/data';\n\n\nconst useStyles = makeStyles((theme) => ({\n  \n  chipRow : {\n    padding : 7,\n    },\n  drawRow: {\n     padding: 8,\n  },\n    closeRow: {     \n      padding: 4,\n  },\n  chipR: {\n    backgroundColor: '#f4f6ff',\n      color: '#36a2eb',\n  },\n  chipL: {\n    backgroundColor: '#fbe5e7',\n    color: '#ff6384',\n        },\n  chipD: {\n    fontSize: 18,\n  },\n  \n lItemEven: {\n    backgroundColor: '#f8f8f0',\n  },\n})); \n\nconst Home = (props) =>  {\n  \n  const {L_KEY, R_KEY, setL_KEY, setR_KEY } = props; \n  const classes = useStyles();\n  const locPlace = 'Choose from list'\n\n  const [newLoc, setnewLoc] = React.useState(locPlace);\n  const [dOpen, setdOpen] = React.useState(false);\n  const [lFilter, setlFilter] = React.useState('');\n  const [isLeft, setisLeft] = React.useState(true);\n  const [fullList, setfullList] = React.useState([]);\n\n \n  const fetcher = (url) => {\n    return fetch(url)\n      .then((response) => {\n        return response.json();\n      });\n  };\n\n  const { data: R_DATA } = useStickySWR(\n    `${API_ROOT_URL}/${R_KEY}.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n  const { data: L_DATA } = useStickySWR(\n    `${API_ROOT_URL}/${L_KEY}.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n  const { data: M_DATA } = useStickySWR(\n    `${API_ROOT_URL}/mdata.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n \n  const { data: LOCS } = useStickySWR(\n    `${API_ROOT_URL}/locs.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n\n const chipDlg = (event, isleft) => {\n   setisLeft(isleft);\n   toggleDrawer(event, true);\n   console.log('isleft=' + isleft);\n }\n \n  const handleClose = () => {\n    setnewLoc('Choose from list');\n    setdOpen(false);\n  };\n\n  const handleApply = (event, locKey) => {\n    console.log(locKey);\n    if (isLeft) {setL_KEY(locKey);}\n    else {setR_KEY(locKey);}\n    setnewLoc(locPlace);\n    toggleDrawer(false);\n    // ReactGA.event({\n    //   category: 'Search',\n    //   action: newLoc,\n    // });\n    ReactGA.pageview('Search/'+newLoc);\n  }; \n \n  const cList = fullList.filter(loc => loc.toLowerCase().includes(lFilter.toLowerCase()));\n\n  \n  const handleFilter = event => {\n    setlFilter(event.target.value);\n  };\n\n  const toggleDrawer = (event, isOpen) => {\n\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    console.log('Toggle d1 fulllist len=' + fullList.length + ' LOCS='+ typeof LOCS)\n    setlFilter('');\n    \n    if (fullList.length === 0 && (typeof LOCS != 'undefined')) \n      {console.log('Toggle d2 setting fullList');\n      setfullList(Object.keys(LOCS));   \n    } \n    setdOpen(isOpen);\n  };\n\n\n  const Row = ({ index, style }) => (\n    index % 2 ?\n    (<ListItem \n      className={classes.lItemEven}\n      alignItems='center'\n      button\n      divider={true} \n      key={LOCS[cList[index]]}\n      onClick={(event) => setnewLoc(cList[index])}             \n      style={style}> \n        <Grid container justify='center'>\n          <Grid item xs={2} />\n          {cList[index]}\n          <Grid item xs={2} />\n        </Grid>\n    </ListItem>)\n      : (<ListItem\n            alignItems='center'\n            button\n            divider={true}\n            key={LOCS[cList[index]]}\n            onClick={(event) => setnewLoc(cList[index])}\n            style={style}>\n            <Grid container justify='center'>\n              <Grid item xs={2} />\n              {cList[index]}\n              <Grid item xs={2} />\n            </Grid>\n        </ListItem>)\n      \n  );\n  \n  const Loclist = () => (\n      <div>\n      <List\n        role = \"presentation\"\n        height={200}\n        itemCount={cList.length}\n        itemSize={40}\n        width={'100%'}\n      >\n        {Row}\n      </List>\n    </div>        \n  );\n  const locDrawer = (\n    <Drawer anchor='bottom' open={dOpen} onClose={(event) => toggleDrawer(event, false)}>\n\n      <Grid container direction='row' justify='space-evenly' spacing={2} className={classes.drawRow} alignItems='center'>\n        <Grid item xs={8} >\n          <TextField \n            id=\"filter\" \n            label=\"Type to filter list\" \n            variant=\"outlined\"\n           onChange={handleFilter} \n            size='small'\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\"><SearchIcon /></InputAdornment>,\n            }} \n          />\n         </Grid>\n          \n          <Grid item xs={4}>\n            <Grid container direction='row' justify='flex-end' spacing={1}>\n              <Button\n                color=\"default\"\n                onClick={(event) => handleApply(event, LOCS[newLoc])}\n                startIcon={<DoneIcon />}\n                >\n                APPLY\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n\n      <Grid\n        container direction='row'\n        justify='center'\n        className={classes.drawRow}\n      >\n        <Chip className={classes.chipD}\n          size='medium'\n          color='primary'\n          label={newLoc}\n          />\n      </Grid>\n        <Divider />\n           <Loclist />\n        <Divider />\n      <Grid container direction=\"row\" justify='flex-end' className={classes.closeRow} >\n           <Button\n            color=\"default\"\n            onClick={(event) => handleClose()}\n          startIcon={<CloseIcon />}\n          >\n          CLOSE\n          </Button>\n       </Grid>\n    </Drawer>\n  );\n\n  return (\n    \n       (L_DATA) && (R_DATA) && (M_DATA)? \n        (<span>\n        <Grid container direction='row' justify='center' className={classes.chipRow} >\n          <Chip className={classes.chipL}\n            avatar={<Avatar variant='square' src={L_DATA.iso === '0' ? process.env.PUBLIC_URL + '/flags/0l.png' : process.env.PUBLIC_URL +`/flags/${L_DATA.iso}.png`} />}\n              label={L_DATA.loc}\n              variant='outlined'\n              clickable\n              onClick={(event) => chipDlg(event, true)}\n              onDelete={(event) => chipDlg(event, true)}\n            deleteIcon={<ExpandMoreIcon />}\n            />\n            <Grid item xs={1} >\n          <Typography align='center'>\n              vs\n          </Typography>\n          </Grid>\n          <Chip className={classes.chipR}\n            avatar={<Avatar variant='square' src={R_DATA.iso === '0' ? process.env.PUBLIC_URL + '/flags/0r.png' : process.env.PUBLIC_URL + `/flags/${R_DATA.iso}.png` } />}\n              label={R_DATA.loc}\n              variant='outlined'\n              clickable\n              onClick={(event) => chipDlg(event, false)}\n              onDelete={(event) => chipDlg(event, false)}\n          deleteIcon={<ExpandMoreIcon />}\n            />\n        </Grid> \n        {locDrawer}\n          <Grid container direction=\"row\">\n            <Grid item xs={12} >\n               <TabPanels left={L_DATA} right={R_DATA} meta={M_DATA} />\n              <br />\n            </Grid> \n          </Grid>\n      </span> \n      )\n        : (<div><CircularProgress /> </div>)\n );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Grid } from \"@material-ui/core\";\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n   hl1: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '95%',\n        flexShrink: 0,\n    },\n    hl2: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        flexGrow: 2,\n        textAlign: 'right'\n    },\n    root: { justifyContent: 'flex-end' },\n    width: '100%',\n    \n}));\n\n\nconst QAPanels = () => {\n\n    const classes = useStyles();\n    const [expd, setExpd] = React.useState(false);\n\n    const hChng = (p) => (event, isExpanded) => {\n        setExpd(isExpanded ? p : false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Accordion expanded={expd === 1} onChange={hChng(1)}>\n                <AccordionSummary className={classes.root}\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"p1bh-content\"\n                    id=\"p1bh-header\"\n                >\n                    <Typography className={classes.hl1}>Q Why this website? </Typography>\n                  \n                </AccordionSummary>\n                <AccordionDetails>\n                    Unless you are an accountant, you might not particularly like looking at a page of figures. \n                    Despite this fact, the onset of the pandemic has forced many of us to resort to looking at figures of tests, new cases, active cases, recoveries, positivity rates, death rates and the like. Never before has so many of the general public resorted to data visualisations and statistical breakdowns. We don't even need to talk about those logarithmic charts - nearly half of the people who see them reportedly can't make heads nor tails of them!\n                     Confronted with such a wide variety of data visualisations and statistical analysis has, \n                     even for the most numerate amongst us, resulted in a wave of confusion, misinformation, \n                     leaving many of us more frustrated and disempowered than before. The aim of this website is to clear away some of that confusion and instead provide simple comparative analysis of two geographic locations of your choosing. Perhaps you need to travel to another place for work and need to check the situation there first, or more likely you want to see how things are with some friends and family scattered around the globe. In both cases this website is for you.\n\n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expd === 2} onChange={hChng(2)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"p2bh-content\"\n                    id=\"p2bh-header\"\n                >\n                    <Typography className={classes.hl1}>Q Who are you?</Typography>\n                    \n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                    I am a concerned individual who like many others have been trying to cope with the impact that coronavirus has had on us all.\n                    Having a background in computer science with many years experience building information systems that turn raw data into useful information, \n                    this is a project to showcase how to cut through confusion with simple but clear analysis.\n                    </Typography>\n                   \n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expd === 3} onChange={hChng(3)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"p3bh-content\"\n                    id=\"p3bh-header\"\n                >\n                    <Typography className={classes.hl1}>Q Where do the numbers come from?</Typography>\n                   \n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                        The data is updated daily from freely available feeds from a number of reputable data sources. \n                        Daily data feeds from Johns Hopkins University in the United States, \n                        the Our World in Data project at Oxford University and the Covid19India.org crowdsourced project in India. I have written algorithms that automatically combine this data and transform it in a way that allows the simple presentation of information you can see displayed. Click the Data Source menu item for more details of the sources.\n\n                    </Typography> \n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expd === 4} onChange={hChng(4)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"p4bh-content\"\n                    id=\"p4bh-header\"\n                >\n                    <Typography className={classes.hl1}>Q Why totals by population and not actual numbers?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Grid container direction='column'>\n                    <Typography> \n                    When you are comparing the pandemic situation in two different locations, if you focus on the actual case numbers it can be misleading. Whilst every case is pertinent and tragic at a personal level, when you are performing comparative analysis it is more beneficial to focus on the prevalence of the problem to come to a clear picture of the difference between locations.  The prevalence is reflected by the number of incidents by the population as a whole.\n                    </Typography>\n                    <Typography>\n                    For instance 100,000 cases in India compared to 100,000 cases in the United Kingdom is vastly different in terms of the population affected.\n                    India has a population of 1,380,004,385 compared to the UK's population of 67,886,004.  \n                    In India the figure of 100,000 cases would only represent approximately 0.007% of the population or about 72 cases per million people. \n                    In contrast, 100,000 cases in the UK would represent 1.47% of the population or 14730 cases per million people.  \n                    In this example despite each country having equal case loads the situation in the UK would in fact be over 200 times worse in terms of the population affected.\n                    </Typography>\n                    <Typography>\n                    It is for these reasons that we have shown the figures on this site as cases per million people. This allows us to compare locations with widely divergent populations. Comparing locations by actual figures are fair only if the locations have comparable populations.\n                    </Typography>\n                    <Typography>\n                    If you wish to see actual case figures you can find them easily on the John Hopkins University Site for US and global figures, or at Covid19india.org for detailed Indian figures. \n                    In contrast the Our World in Data website defaults to a view showing figures by population but you can also  opt to see actual figures there.\n                    </Typography>\n                    </Grid>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expd === 5} onChange={hChng(5)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"p4bh-content\"\n                    id=\"p4bh-header\"\n                >\n                    <Typography className={classes.hl1}>Q Are the figures accurate?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                    The data I am using is the same data that informs governments and media houses across the globe.\n                    The collection of this data is the result of a monumental effort involving the co-operation of hundreds of people all over the globe.\n                    If you look closely you will surely find some inconsistencies in the figures. Use these numbers with discretion, they are meant only as a guide.\n                    Millions of people have had coronavirus and have not been tested at all. Testing varies widely across the world.\n                    I have chosen to use a minimal set of statistics that are most reliable. \n                    Some figures like case recoveries and active cases are omitted as their definitions are neither consistent nor accurate.  \n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expd === 6} onChange={hChng(6)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"p4bh-content\"\n                    id=\"p4bh-header\"\n                >\n                    <Typography className={classes.hl1}>Q What locations are available?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Grid container direction='column'>\n                   <Typography>\n                    1. United States - all states and counties - data sourced from John Hopkins University\n                    </Typography>\n                    <Typography>\n                    2. India - all states and districts - data sourced from covid19India.org\n                    </Typography>\n                    <Typography>\n                    3. All other countries - country level plus regional breakdown if available -  data sourced from John Hopkins University\n                    </Typography>\n                        </Grid>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={expd === 7} onChange={hChng(7)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"p4bh-content\"\n                    id=\"p4bh-header\"\n                >\n                    <Typography className={classes.hl1}>Q Can I help?</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography >\n                        I have initially chosen to provide this website freely, without pushing advertising.\n                        The site advocates user privacy, and other than counting anonymous page visits we do not collect or manipulate any of your data in any way.\n                        You can connect with me by email with any feedback.\n                    <a\n                            href=\"mailto:hello@datamudra.com\"\n                            className={classes.hl1}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <MailOutlineIcon fontSize='small' />\n                        </a>\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n\nexport default QAPanels;\n","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Card, CardContent, Chip, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n   \n   hl1: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '95%',\n        flexShrink: 0,\n    },\n    root: { justifyContent: 'flex-end' },\n    cardR: {\n        textAlign: 'center',\n    },\n    width: '100%',\n    \n}));\n\n\nconst DSPanels = () => {\n\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={1} className={classes.root} direction='row' justify='center'>\n            <Grid item xs={12}>\n                <Typography component='div' align='center' >\n                    <Chip \n                        label='Data Is refreshed daily from:'\n                        variant='outlined'\n                        size='small'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} >\n                <Card raised={true} >\n            <CardContent>\n                    <Grid container direction='column' alignItems='center' spacing={2} >\n                    <Grid item xs={12}>\n                    <Chip   \n                                    avatar={<Avatar variant='square' src={process.env.PUBLIC_URL + \"/flags/US.png\"} />}\n                            label='Johns Hopkins University'\n                            variant='outlined'\n                            size='small'\n                        />   \n                    </Grid>\n                    <Typography variant=\"body2\">\n                        The&nbsp;\n                        <a\n                                href=\"https://github.com/CSSEGISandData/COVID-19\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                                COVID-19 Data Repository\n                        </a>&nbsp;\n\n                        by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University.\n\n                    </Typography>\n                </Grid>\n            </CardContent>\n            </Card>\n            </Grid>\n            <Grid item xs={12}>\n                <Card raised={true} >\n                    <CardContent>\n                        <Grid container direction='column' alignItems='center' spacing={2} >\n                            <Grid item xs={12}>\n                            <Chip\n                                    avatar={<Avatar variant='square' src={process.env.PUBLIC_URL +\"/flags/IN.png\"} />}\n                                label='Covid-19 India Org'\n                                size='small'\n                                variant='outlined'\n                            />\n                            </Grid>\n                            <Typography variant=\"body2\"> The &nbsp;\n                            <a\n                                href=\"https://api.covid19india.org\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                                    COVID-19 India Org data repository\n                        </a>&nbsp;\n                          from the covid19india Data Operations Group.\n\n                    </Typography>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={12} >\n                <Card raised={true} >\n                    <CardContent>\n                        <Grid container direction='column' alignItems='center' spacing={2}  >\n                            <Grid item xs={12}>\n                            <Chip\n                                    avatar={<Avatar variant='square' src={process.env.PUBLIC_URL +\"/flags/GB.png\"} />}\n                                label='Our World In Data'\n                                size='small'\n                                variant='outlined'\n                            />\n                            </Grid>\n                            <Typography variant=\"body2\">\n                                    The&nbsp;\n                     <a\n                                        href=\"https://api.covid19india.org\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\">\n                                    Our World In Data (OWID) data repository\n                        </a> &nbsp;  from the University of Oxford.\n                         </Typography>\n                                <Typography variant=\"body2\" >\n                                        The OWID testing dataset is sourced from:\n                        </Typography>\n                                <Typography variant=\"body2\">\n                                        Hasell, J., Mathieu, E., Beltekian, D. et al.&nbsp;\n\n                        <a\n                                            href=\"https://doi.org/10.1038/s41597-020-00688-8\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\">\n                                            A cross-country database of COVID-19 testing\n                        </a>\n                        . Sci Data 7, 345 (2020).\n                        </Typography>\n\n                    \n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography component='div' variant=\"body2\" align='center'>\n                    Data cited above has been freely released under a\n                    &nbsp; \n                    </Typography> \n                    <Typography variant=\"body2\" align='center'>\n                        <a\n                            href=\"https://creativecommons.org/licenses/by/4.0/\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            creative commons 4.0 license\n                        </a>\n                    </Typography>       \n                 \n            </Grid>        \n       </Grid>\n       \n    );\n}\n\nexport default DSPanels;\n","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles(() => ({\n   \n    aPage: { textAlign: 'center', },\n    \n}));\n\n\nconst About = () => {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.aPage} >\n            <div>\n                <img src={process.env.PUBLIC_URL + '/logos.png'} alt='Datamudra' width='170' />\n            </div>\n            <Typography>\n                \"Clarity through simple facts\"\n\t\t\t\t\t</Typography>\n            <br />\n            <a\n                href=\"mailto:hello@datamudra.com\"\n                className=\"mail\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <MailOutlineIcon />\n            </a>\n            <Typography>\n                Email for queries or feedback\n\t\t\t\t\t</Typography>\n\n        </div>\n    );\n}\n\nexport default About;\n","import React, { useEffect }  from \"react\";\nimport { AppBar, Box,  Chip,  Grid,  Toolbar, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HelpIcon from '@material-ui/icons/Help';\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ReactGA from 'react-ga';\n\nimport Home from \"./components/Home\";\nimport QAPanels from \"./components/QAPanels\";\nimport DSPanels from \"./components/DSpanels\";\nimport About from \"./components/About\";\n\nfunction TabPanel(props) {\n\tconst { children, sidx, idx, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={sidx !== idx}\n\t\t\tid={`p-tbi-${idx}`}\n\t\t\taria-labelledby={`p-tb-${idx}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{sidx === idx && (\n\t\t\t\t<Box p={1}>\n\t\t\t\t\t<Typography component='div'>{children}</Typography>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tidx: PropTypes.any.isRequired,\n\tsidx: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tflexGrow: 1,\n\t},\n\tbarTit: { \n\t\t// fontWeight : 900,\n\t\ttextAlign: 'center'},\n\tdrawer: {\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t},\n\tbarChip: { borderColor: '#fbe5e7',\n\t\tcolor: 'white',},\n\tappBar: {\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\ttBar: {\n\t\tjustifyContent: 'space-between',\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t},\n\t// necessary for content to be below app bar\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(0), \n\t},\n\ttoolbar: theme.mixins.toolbar,\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t},\n}));\n\nconst drawerWidth = 180;\nconst pages = ['home', 'datasources', 'FAQ', 'contact']\n\nconst App = (props) => {\n\n\tconst { window } = props;\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst [mO, setMO] = React.useState(false);\n\tconst [L_LOC, setL_LOC] = React.useState('20001');\n\tconst [R_LOC, setR_LOC] = React.useState('20002');\n\n\tconst hMT = () => {\n\t\tsetMO(!mO);\n\t};\n\tconst [sidx, setsidx] = React.useState(0);\n\tconst hLIC = (event, idx) => {\n\t\tsetsidx(idx);\n\t\tReactGA.pageview(pages[idx]);\n\t\tif (mO) {\n\t\t\t\n\t\t\thMT()};\n\n\t};\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<div/>\n\t\t\t<img src={process.env.PUBLIC_URL + '/logos.png'} alt='Datamudra' width='170' />\t\t\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem \n\t\t\t\t\tbutton key='Home'\n\t\t\t\t\tselected={sidx === 0} \n\t\t\t\t\tonClick={(event) => hLIC(event,0)} >\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Home' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem \n\t\t\t\t\tbutton key='Data Sources' \n\t\t\t\t\tselected={sidx === 1}  \n\t\t\t\t\tonClick={(event) => hLIC(event, 1)}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<DataUsageIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Data Sources' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem \n\t\t\t\t\tbutton key='FAQ' \n\t\t\t\t\tselected={sidx === 2} \n\t\t\t\t\tonClick={(event) => hLIC(event, 2)}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HelpIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='FAQ' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem \n\t\t\t\tbutton key='Contact' \n\t\t\t\tselected={sidx === 3} \n\t\t\t\t\tonClick={(event) => hLIC(event, 3)}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<InfoIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Contact' />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t</div>\n\t);\n\n\tconst container = window !== undefined ? () => window().document.body : undefined;\n\n\tuseEffect(() => {\n\t\t// Runs once, after mounting\n\t\tReactGA.initialize('UA-188843494-1');\n\t\tconsole.log('called GA UA-188843494-1');\n\t\tReactGA.pageview(pages[0]);\n\t}, []);\n\n\treturn(\n\t\t<div className={classes.root}>\n\t\t<CssBaseline />\n\t\t\t<AppBar position='fixed' className={classes.appBar} >\n\t\t<Toolbar className={classes.tBar} >\n\t\t<Grid container direction='row' justify='space-evenly' alignItems='center'>\n\t\t\t<Grid item xs={11} md={12} >\n\t\t\t\t\t\t\t<Typography className={classes.barTit} variant=\"caption\" display=\"block\">\n\t\t\t\t\t\t\t\tCOVID-19 STATUS : CHECK &amp; COMPARE\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Typography component='div' align='center' >\n\t\t\t\t\t\t\t\t\t<Chip className={classes.barChip}\n\t\t\t\t\t\t\t\t\t\tlabel='Choose from over 4500 global locations'\n\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1} >\t\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tonClick={hMT}\n\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t>\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t</Grid>\n\t\t</Toolbar>\n\t\t</AppBar>\n\t\t\t<nav className={classes.drawer} aria-label=\"app pgs\">\n\t\t\t\t<Hidden mdUp implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\n\t\t\t\t\t\topen={mO}\n\t\t\t\t\t\tonClose={hMT}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<div className={classes.content}>\n\t\t\t\t<TabPanel sidx={sidx} idx={0}>\n\t\t\t\t\t<div className={classes.toolbar} />\t\t\t\t\t\t\n\t\t\t\t\t<Home L_KEY={L_LOC} R_KEY={R_LOC} setL_KEY={setL_LOC} setR_KEY={setR_LOC} /> \n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel sidx={sidx} idx={1}>\t\t\t\t\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t<DSPanels />\n      \t\t\t</TabPanel>\n\t\t\t\t<TabPanel sidx={sidx} idx={2}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t<QAPanels />\n      \t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel sidx={sidx} idx={3}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t<About />\n      \t\t\t</TabPanel>\n\t\t\t</div>\n\t</div>\t\n\t);\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}